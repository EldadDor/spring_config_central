<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Use a stable, recent version of Spring Boot. This manages versions for many common dependencies. -->
	<parent>
		<groupId>com.edx.spring.config</groupId>
		<artifactId>spring-config-central-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>config-central-server</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>config-central-server</name>
	<description>Spring Cloud Config Server</description>

	<!--

		<properties>
			<maven.compiler.release>21</maven.compiler.release>
			<maven.compiler.source>21</maven.compiler.source>
			<maven.compiler.target>21</maven.compiler.target>
			<kotlin.version>2.0.20</kotlin.version>
			<kotlin.compiler.jvmTarget>21</kotlin.compiler.jvmTarget>
			<kotlin.compiler.apiVersion>2.0</kotlin.compiler.apiVersion>
			<kotlin.compiler.languageVersion>2.0</kotlin.compiler.languageVersion>
			<java.version>21</java.version>
			&lt;!&ndash; Use the corresponding compatible Spring Cloud version for Spring Boot 3.3.x &ndash;&gt;
			<spring-cloud.version>2025.0.0</spring-cloud.version>
		</properties>

	-->


	<dependencies>
		<!-- This brings in the Config Server functionality, including the Git repository support -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>


		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.8.9</version>
		</dependency>
		<!-- Kotlin 2.x dependencies -->
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<!-- Jackson Kotlin module for JSON serialization/deserialization -->
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-kotlin</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- Kotlin Maven plugin - MUST come before maven-compiler-plugin in the POM -->
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<version>${kotlin.version}</version>
				<configuration>
					<jvmTarget>21</jvmTarget>  <!-- Critical: Add this -->
					<sourceDirs>
						<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
						<sourceDir>${project.basedir}/src/main/java</sourceDir>
					</sourceDirs>
					<args>
						<arg>-Xjsr305=strict</arg>
						<arg>-jvm-target</arg>  <!-- Add this -->
						<arg>21</arg>  <!-- Add this -->
					</args>
					<compilerPlugins>
						<plugin>spring</plugin>
						<plugin>jpa</plugin>
					</compilerPlugins>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-allopen</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-noarg</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/main/java</sourceDir>
							</sourceDirs>
							<jvmTarget>21</jvmTarget>  <!-- Add here too -->
						</configuration>
					</execution>
					<execution>
						<id>test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>test-compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/test/java</sourceDir>
							</sourceDirs>
							<jvmTarget>21</jvmTarget>  <!-- Add here too -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Maven compiler plugin - MUST come after kotlin-maven-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>

					<execution>
						<id>default-compile</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>java-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>java-test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--	<source>21</source>
						<target>21</target>
						<fork>true</fork>
						<executable>/usr/lib/jvm/java-21-openjdk-21.0.7.0.6-1.el9.x86_64/bin/javac</executable>
						<compilerVersion>21</compilerVersion>-->
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
		<finalName>${project.artifactId}</finalName>
	</build>

</project>
